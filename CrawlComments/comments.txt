the new typeahead component is awesome.
I know, this increases the complexity of the typeahead component, but makes it on the other side very useful.
I think its very good ideas but given the pressure they are under currently to release 2.0 tomorrow and lots of other issues on current 2.0 I think its better to slate this for a later release.
I'm not opposed to using fonts—that'd be pretty awesome.
768px is too big for such split.
In any case, I believe this extra breakpoint is important.
I don't really see this being an important or critical use case, @andyl.
This is a free, awesome, framework.
I get you can't add every possible device breakpoint, but the lack of a 320px breakpoint is surprising.
IMHO, tn(<=480px) is much more important than lg (>1200px).
Don't get me wrong, I do love Bootstrap 3 and I do admire the developers who created it (let's face it, they have made our lives much easier), but I don't understand what were they thinking when they selected breakpoints for BS3.
It's not good for much else beyond that, but I think it gets the point across:
However, I don't think this should be part of the bootstrap "core".
That's not bad, but I feel like it could be better.
I think you are misunderstanding me completely.
In this case, I agree with @mdo, i think this sort of behavior should be under a click.
In general, I think it's a good idea to make as many things as possible customizable through bootstraps customizer.
This should make it easier to use the switch as a checkbox replacement because you won't need to change backend code that handles the checkbox input.
But I think it's cleaner than my old test, and I prefer a non-JS solution personally.
Also, the flat colors are nice, but I think it should be optional, maybe a .flat class.
I understand the advantages I think, but what I like about tables here is that they maintain their intended structure when styles are missing or broken.
this one seems quite extensive and good: Kalendae
Perhaps you're right, but it is a very useful thing which is needed on almost all sites.
I don't really think a default border-color would be very useful anyway, the way the colors are handled currently makes sense.
Maybe it is very basic, but I am using it on a project, and for me it is enough.
Combining the looks and functionality of @eternicode with the keybord navigation of @storborg would really make it look great and easy to use.
I personally like the approach of enabling a datepicker fallback when the browser doesn't support html5 date input, (with the possibility to always override the style)
I agree with @ronlobo , I think since we have such great border control (in terms of colors) over most of the components, that having a border-width variable on the component level would indeed be pretty useful.
We can tweak the type scale, but I'm inclined to leave it as-is with a simpler and easier to understand behavior across devices.
I have a feeling this would be very brittle.
I'm not sold that it's necessary—it's an awfully narrow viewport on phones and I can't think of that many compelling reasons to add them (and thus push/pull classes).
I would personally rather write the above row of classes instead of writing custom css for the media queries.
It might be worth checking out if parallelizing doesn't gain much speed.
I think a datepicker in bootstrap should only use valid (and all of the) html5 input attributes, for compatability with different plugins/frameworks;
Im just afraid bootstrap will grow to heavy if it add to many official js plugins and the creators will get tired of maintaining it because it grow to big.
What I rather see is maybe some offical plugin channel where people can find and contribute to bootstrap goodies that doesnt need to be in the core.
My preference would be to use the jQuery Gritter plugin though.
I really really like the different layout possibilities offered by Noty.
I believe that the notifications should be styled just like alerts, but also offering a white and black flavor.
The only one out of those examples i like is the cssdeck.com one but i hate the animation of it.
But i personally don't think black as a default looks good.
The current v4 spacing utilities are very useful for laying out a page, but are ineffective in a responsive layout as they're a fixed size.
I think a light background would also fit better into the current bs style.
And ideally, the process should not be complex or manual!
Not sure if anyone has mentioned this or not, but it would be cool to have something like this:
I think it should be opt-in (.table-hover) just like the rest of the table classes.
We don't plan on duplicating work either - our development philosophy is very different from the jquery ui teams approach.
I agree that not everyone will be jumping to upgrade their projects or visual studio immediately.
Also, I don't think bootstrap author would consider a change so low level and pervasive.
I like the way OOCSS handles the media objects and this is just a good compliment for Bootstrap
I agree it's a little too late now, but better late than never.
Hmm, I have to agree with @andriijas, it was fairly simple to just copy/paste the parts of docs.css and application.js that applied to subnavs.
It looks great and from a UI perspective it's really very useful.
I think BS3's new theme looks good, it's a little flat style.
But I think the form input element don't match the main design very well, the focus style on input(textarea) is not very good.
I really like the look of Bootstrap 2, but like the new features of Bootstrap 3.
I understand Bootstrap is useful naked as a starting place, but I think it also offers a great service as a finalized platform.
However I personally think this is the perfect opportunity for the community to start a new project to keep the 2.x buttons going while the core team focus on innovation.
The extra theme will help, but my personal opinion is that it should be included by default and easily removable back to the flat UI for customization.
I don't think having a modal that covers a larger portion of the screen is defeating the purpose of a modal.
Personally I really find them useful - as mentioned above, they are used to great effect when resizing to xs views, where the dividers can be transformed into horizontal ones.
I also agree that they shouldn't remove it because it makes things complicated.
I don't think the badges are appropriate for numbering steps.
It looks nice, but after your comment, I'm not sure how I feel about it.
I thought it should be, but didn't want to get too pedantic in my previous comment.
Your responsive version with the badges alone actually looks quite nice, I get it, but using the badge element still feels forced to me.
I think this only happens when the text/content of the modal is beyond the screen size.
I personally prefer this since if you have buttons in the footer they are always visible without having to scroll.
I don't think it matters to BS if either is true...
I assume we're good to leave it given the low usage rates of v28, but could be worth diving into more.
Maybe this is related to our use of translate3d in modals? (Wild guess)
I think there must be something else on the page that's interfering with Bootstrap.
I think it's just that the browser actually considers the paper page (after accounting for margins) to be less than 768px wide, thus our extra-small / mobile grid styles apply, hence the stacking.
I really dont want to get into the namespaced data option/attribute game because it seems really messy and painful. and kinda edge case considering tooltip/popovers are probably the most common use case and you can just not use the data-toggle with them.
I've always hated the idea of class-based grid markup.
I think the approach of having one big "ticket" for accessibility was probably one of my worst.
This sort of thing is making the task of moving something from Bootstrap v2 to v3 VERY difficult.
So theoretically it seems like it should use the Small (non-stacked) grid, but I'm probably missing something that's eating those last 10px.
Using the XS/extra-small grid seems like a bad idea, though.
I like the idea of changing the media query only for the print styles to be a smaller breakpoint.
In my opinion the coolness of the bootstrap plugins is because of its simplicity.
I think things like what content goes in to the modal or tabs doesn't belong in the plugin.
I still think some CSS for the job would be awesome though.
I think the idea behind these requests is to stop having to use jquery ui :P
It would be better to create matching styles, but it is not really necessary.
But I agree that's it's really bloated anyway and using both jQuery UI and Bootstrap is overkill.
I personally very much dislike the effect and would rather see it as an "opt in" kind of option.
I sincerely thank +markdotto and the others for sharing bootstrap, it is awesome.
Bootstrap is great, and I love using it, but it's these blatantly ignorant comments that I can't stand.
I'm sure you think it's the same, but for me it's not.
Again, I think we would agree on this when digging deeper, it suffices to say that this is my personal opinion and there is always something new for me to learn, this may not be an exception.
Unless source ordering is no longer an issue nowadays, I think this would be good for layouts, especially left sidebars, as well as showing different block orders between desktop and mobile views.
It's very inconvenient not to be able to use jQuery's .hide() and .show() method with these classes anymore...
It's a terrible thing to debug when something is being overridden with !important.
There certainly could be mis-uses of the spacer "helpers", but I think on the whole, they would be of benefit as an additional scaffolding feature.
I really appreciate the fact that Bootstrap has introduced everyone, from regular developers to newbies to seasoned UX junkies, to a means of communicating about front-end development that didn't exist before.
I think we'd be strung up by our thumbs if we added another developers js framework instead of simple, wildly popular one.
With a simple, yet full, framework, people could easily share ideas and reuse components which was desperately needed.
Looks like its onto a different framework, or maybe just using jQuery and doing it from scratch if Bootstrap isn't going to look good on 90% of new phones.
I feel like it is a very good framework however if it does not work on high pixel density screens and therefore is basically unusable as a solution for web development on mobile screens.
At this point I don't think we'll integrate a pull unless we get a compelling and simple enough pull request.
I don't like the approach of having a million more media queries.
I agree with mdo's remark (#17280 (comment)) that the approach being suggested is overly simplistic and incomplete.
It is very strange that bootstrap did not support RTL until now.
I would think this would tie in very nicely with the subNav bar changes you have planned for 2.2.0, as this really is just a special case of how the subnav bar is used in your documentation.
I agree that the proposed change is a feature because of introducing a new option.
Whatever is done, I think it should be optional or opt-out-able, since if i wasn't using the transitions here, I don't think I'd have any recourse to call .off('bsTransitionEnd')
IMO it's a very reasonable request and your blanket dismissal was hasty.
Bootstrap is awesome but it´s kind of dissappointing that something so basic doesn´t work.
I don't think this should be included in bootstrap.
I have been finding these two variables quite handy.
Having $text-uppercase potentially not be uppercase seems confusing to me.
Variables like ${component}-text-transform would seem clearer.
I feel this is extremely useful on a regular basis.
While I can see the merits of having this on the side, it does seem more like a per-project thing, and not very necessary to the overall goal of bootstrap.
I don't see this saving folks time and I don't want us adding variables and properties throughout to state a default that's usually not overridden.
My vote is to have $text-casing be applied to headings, labels, buttons, base-font, etc. and let the user turn it off and on.
I gotta say I was indeed kind of disappointed and since we're already including a .js to make those buttons work I think it would be a good idea to already put the underlying markup and JS in Bootstrap.
I think the format can be simple as each variable per line, like the example above.
I like the idea too, though understand the desire to keep this out of mainline.
It's not nice when you have 30+ elements in the same column.
I feel I have to highly disagree on this instance @gilronc.
I loved the idea behind .tag but it would bring unnecessary breakage to wordpress projects if that is the case.
Lastly, IMO, I feel that software decisions should not be predicated nor effected by other, third party, software.
In my opinion, it would make more sense to attempt for compatibility with jQuery 3.0 after it is out of the alpha stage and it can confidently be developed against in regards to general API stability.
I feel this is a basic but decent start in for the Bootstrap framework.
I assume the big pieces are done now (based on what their announcement said) but it sounded to me as though more changes will probably occur prior to beta / GA.
I guess we'd ought to toss in some iOS Safari detection/UA-sniffing for good measure.
I would like to see floating labels be incorporated into bootstrap 4.
Me neither, I dont really understand this decision, but anyway it can still be usefull for anyone trying to do it
Interesting, but I don't think differentiating between the label and placeholder text is a good idea.
In my opinion, this is much easier to understand quickly:
I love the foundation rem-calc() function too.
That isn't a good long-term strategy, especially when all you're trying to do is alter colours.
I fully understand that you don't want users to mix up labels with badges.
It seems to be more compatible then any other version!
I feel like sortable tables are common, and that one of bootstraps nicest features are standard class names that everyone understands.
I agree with needing to make this change.
It sounds like not a lot of code, but I'm really hesitant to do a half-implemented feature.
Not all columns might be sortable, so I think putting the class on the <th>s themselves would be better.
I don't think #element is an appropriate container, but I couldn't get it to resize properly with body or the button's parent either.
It's a relatively easy component to build and not something I think folks should over use.
While I think .col.col-{size}-{n} could make sense, I think we'd be opposed to .col.{size}-{n} since we don't use the "chained classes" approach to writing CSS.
Personally I'm not opposed to this though
That's super helpful for us already, but I feel like we're leaving folks out to dry a bit when it comes to actually building Bootstrap from source.
Using a simple fade(black/white, 25) would have been smarter in my opinion.
I think this might be a good idea, it will just take a little work.
It seems worthwhile to have some kind of build tooling in place, no matter the method of inclusion.
I think in Collapsible content is the best method to create off-canvas, drawer, or whatever name to references this.
I think it's useful and very common: each comment on this page is enclosed in one.
I also have a feeling that using .{size}-{n} as a class instead of .col-{size}-{n} might cause some problems down the line.
I guess it makes it easier to style columns externally if needed by separating .col as a separate class.
I don't think media components are any more useful than the pull-left or pull-right classes in this case.
I'm still not convinced we need to override every single one of those values, but I am open to improving the customization on some of them.
In my mind a floated element should behave the same no matter what it contains and that's why I thought that Firefox rendered it correctly.
To be honest, I personally prefer the .input-group-wrapper since I need the dynamic minimum size that floats offer (and that was exactly my use case).
However this design decision leads to users simply not using badges but labels for numbers (which is against the goal of not mixing them up) or using raw css inherently disconnected from the bootstrap color scheme, which I don't think is what you are after.
yeah, I don't think label elements are allowed to be truly 'disabled'.
I would argue at least for V3 that this change wouldnt be possible as it is a new feature which goes against the feature freeze status of bootstrap v3 currently.
Would it be possible to add a callback, that I can use to query the remote server and return a set of items that match the entered query?
I'd love to suggest they add an up/down voting feature or something so people could use that and we wouldn't get email notifications for all these +1's.
1000 times - please add .col-tn with breakpoint @ 480 - important to have more control for small-screen layouts.
With great mobile support in 3.0, it would be nice to have one more breakpoint, to separate vertial mobile & horisontal mobile.
It could be added manually but I believe it should be added to the default set of breakpoints because a lot of people are looking for it.
+1, needed this exact case today in a new BS3-based app.
This feature is so essential, please make it in 3.1 release
PLEASE add another breakpoint below 768... this is really needed!!!
I would really love it if you guys would consider adding another size to more specifically target smaller devices in a future release.
Bootstrap Team: add 480 breakpoint and you will achieve almost perfection! :)
+1 for adding a 480px breakpoint to Bootstrap.
Might be nice to add a link to the grid documentation or have another example demonstrating this like the sticky footer stuff.
+1 for this feature, currently I've replaced entries with only two choices by togglable buttons in my forms, but on/off switches would be far more user-friendly and consistent with today's interfaces.
Would be nice to have bootstrap cached on the browser once for thousands of sites to benefit.
+1 for a CDN
+1 for a CDN for both minified CSS and JS
Another +1 for a CDN
For the moment adding only a date picker and separate time selector would be great, and letter the final validation (maximum/minimum with date be handled by an own function (as is done when using ranges)).
+1 I would love a Date input for Bootstrap.
I would love to see the same improvements and commitment to accessibility in Bootstrap.
Being able to lay out content vertically in a responsive way would be extremely useful.
It would be nice to have a growl-like notification component within bootstrap :)
+1 for having growl notifications
Would be great to have support for right-to-left languages.
+1 really is something that if needed I would like to get her at the next version
Add support for loading remote data (like facebox) on model window
+1 for noty integration or having a noty theme compatible with bootstrap.
It would be great if Bootstrap supported "autocomplete" like for a search field.
+1 for the integration of Noty with the now already done Bootstrap theme.
We need a dark/inverted style alert for this.
It would be nice to have a better API for this, the current workaround looks a little hacky.
Adding NuGet would be a helpful addition.
It would be nice to have some indication of the total number of items in the carousel and the current position of the carousel.
+1 Having an official NuGet package would be a big win.
It would be really great if Bootstrap at least offered nesting down to a 2nd level this way.
+1 My team uses bootstrap within visual studio, being able to depend on a reliable NuGet package for it would be tremendously helpful.
Adding NuGet support only helps even if it's not the primary packaging system in the future.
It would be great to have a official nuget package
I loved the way you did the subnav on docs, i would love that becomes an component and javascript plugin.
It would be nice if this could be packaged up into Bootstrap proper
+1 to leave plain design with later additional theme
I want to add a new feature request for bootstrap 4 : Card Flips .
Would be great if we have a file all.min.js with all .js there.
It'd be nice to see Bootstrap add functionality for multiple data-toggle values in a future release.
+1 for the new flat design, makes it much easier to customize
It would be useful to provide column push and pull classes for all three different grids.
+1 for the keeping the base stuff fairly simple / easy to maintain and adding in themes
It would be great if you could add a progress tracker navigation device to your supported styles / examples.
+1 for making the wizard a core part of Bootstrap.
I believe the current plan is to try adding RTL support as a new feature in a minor release post-v4.0.0, although given the Core Team's lack of RTL expertise, it's still a bit up in the air.
but if I have a already bold text and I want to remove the text formatting, then text-normal would be very helpfull.
It really would be nice to have an API to request a custom build from.
It would be nice to see this issue taken into consideration in future releases.
It would be great if when you click a button, the ajax would load the according content and add it to the modal
I would like an option to remove the hover too !
Perhaps you could consider adding a similar set to bootstrap?
It would be nice if we could use negative offsets to allow presentation order to be independent from source order.
I'll add one more vote for better source ordering support as andregriffin suggests.
would be awesome to write a plugin which you could drop in to easily extend all other plugins with accessibility support etc.
It would be great to be able to specify a custom classname to be used by a popover..!
Bootstrap is a very great project and I hope they will support RTL very soon.
Would be nice to have a simple way to have the headings of a table stay at the top of a table as you scroll the page.
Would be nice to have this integrated in so it's aware of the other fixed elements like the navbar and will adjust blocking accordingly.
It'd be nice if Bootstrap offered a component to <audio> and <video> tags using the grid.
I would like to propose adding additional _variables.scss to be baked into b4.
Adding the uppercase and lowercase variables to the the _variables.scss file would help inspire a designer to utilize casing for in their designs.
It will be good to add dropdown placement customizing.
Would be nice if it behaved like popover.
I was thinking that it would be great if there's a easy and intuitive way to also bootstrap a configurable style guide on top of Bootstrap docs.
+1 for having jQuery 3.0.0 support in Bootstrap 3.x
I would love to see bootstrap on npm!
It would be good feature add similar option for .btn-outline- or use colors from $btn-*-color in button-outline-variant mixin, or use sass functions for checking color lightness.
However I am about to implement a feature in my project that I think would be useful to have in the bootstrap core.
Further, it would be great for it to have Huxley (or similar) integration into a Grunt task, so that it also allows you to test your styles for unintentional changes.
But would like to see the markup return for common implementation.
In order to standardize transitions it would be useful to add variables for transitions.
Please add this in Bootstrap docs.
A way to declare the factor by which headings are scaled up and down by screen size would be great.
Ideally, users should be able to define 4-5 colors (primary, secondary, etc) and the entire colorscheme would change to match exactly (form highlights, borders, background, everything).
I think it would be useful, to add a black button.
I would love to see responsive tabs added in the BS3 release.
It would be incredibly helpful to be able to get a live preview what the user interface components would look like when customized (colors, fonts, etc).
As the title says, can you add support for jQuery 3.
Also -- Can we add a variable for the input focus transition (for border and box shadow) in the [13. Forms] section.
Agreed with these guys above, badges are different because of the shape, and thus I would love to have the standard color states available for them as well out of the box.
And classes like .m-xs-auto, .m-xl-auto would be great for responsively centering block elements.
Keeping in line with the other table features that Bootstrap offers, it would be great if this effect is not enabled by default.
An "apply" and "reset" to default settings would be great.
It is useful to have the default value as a placeholder, but it would be nice to have it in the value as well, which would make it possible to use the default value as a starting point.
I'd like to see the Gruntfile become a tool anyone can use.
It would be nice to have a busy indicator component.
Just wanna say me and my company is using this from around a year and this works like wonders and can be a good feature if its gets added up for Bootstrap 4
At the very least it would be nice to have a class in Bootstrap that disables the hover effect.
Please add a titled panel component to Twitter Bootstrap.
So as bootstrap is a popular framework , it should have this feature so that ipad users will not face that difficulty in future.
It would be nice to be able to set the amount of items to display.
If I have a page wide carousel with 50 content items (product photos for instance), it would be nice to be able to show 5 items per time.
Also with the option to display more items in the carousel container, the following extra options and functions would be needed for flexibility.
I've used a bootstrap plugin (http://www.jasny.net/bootstrap/examples/navmenu/) for this sort of thing before but it would be great to have official support for something like this.
It would be also nice to keep abbreviations like md, lg for only breakpoints to reduce the confusion.
If added a OVERLAY option, this will be great :)
So it would be really nice if there would be a bootstrap-native progressbar
Basically it would be nice to add bootstrap via package but not add any actual files to the build output, but simply a reference to a (possibly configurable) CDN URL.
It would be great if the gutter width could be configurable independently for the grid definitions in each of the screen sizes.
It would be nice to have responsive spacing utility classes to manage gutters easily.
I'd love to see an option to configure bootstrap so it would use a CDN instead of local files when building for production.
in http://getbootstrap.com/customize, it would be a nice improvement if we could save or import less variables to customize bootstrap.
But I often have to implement an autocomplete that is fetching data from a remote source.
I've created a very simple proof-of-concept using a single checkbox.
Here's a few versions that I've been working on.
This version requires minimal HTML and uses the data-api to create the necessary child spans that make it all happen.
It also uses JavaScript to perform the switching by toggling the active class, instead of using the label and checkbox with the :checked pseudo-selector.
The defaults are ON and OFF and apply to any missing attributes.
I have also added a checkbox option (or data-checkbox attribute) which specifies whether or not you'd like a hidden checkbox included too.
they're the same size as Apple's ones on iOS.
Both IE 7 and 8 don't support the :checked CSS3 selector, which basically means that using an actual checkbox to track the state isn't possible and therefore JavaScript is required.
Also you use the :not CSS3 selector, which is also not supported in these browsers.
The only place I still use :before and :after is in the text labels which is why they don't show up on IE7.
There's lots of room of innovation in this space and the way we are currently approaching development allows us to cut a lot of corners that just isn't possible for the jquery-ui team.
Jquery's tab widget is about 2500 lines of code, where our's is about 50 lines.
I plan to write a new datepicker plugin to clean up the markup and match the bootstrap structure of configuring UI elements with data attributes.
He doesn't have the code hosted anywhere but as a zipfile on his site, but I needed a datepicker and his was the nicest one I'd seen, so I manually forked it and made some necessary improvements.
I set up a fiddle based on your example in the css tests:
Sometimes I use multiple monitors, but currently my laptop is not attached to any other device.
I just tested it on Ubuntu 16.01 LTS
I've compiled bootstrap-master with the latest SimpLESS and it outputs a valid CSS file of about 117 KiB, which tests OK on my web application with the 2.2.2 JS.
I'll check my other CSS and/or test a fresh install.
I have not tested it, but I will probably get the chance within the next hour, if you don't test it by then :P.
I noticed it a couple of times in IE11, but never when the modal is open.
There's only three classes: one to handle months, one to handle calendars and another for date editors.
Chrome canary got support for datalists recently.
If the height of the modal changes after its initial creation, it always pushes out of the background (.modal-backdrop) depending on screen size.
I have enchanced it to support mask on the input (for faster typing) time picking.
I also applied some css fixes to the original code for it to work properly on IE7.
I can already see the Bootstrap name for it, Gwitter :D
The reason for JS is on TOP of CSS.
I tested it 12 times (I refreshed the page after 3 times) with Chrome 20.0.1132.47 on Mac OS X Lion.
Note that I could never reproduce the bug on Safari (5.1.3) nor on Firefox (12.0)
In Firefox, the animations act as listed in my comment above.
The reason I use that over the built in remote functionality is I need to rip out the header and footer elements from the result and place them in the header, or wire up new buttons in the footer (to preserve form functionality).
I am using a form with dynamic form validation within the modal.
Note this is a quick draft I did, if you see a better way of doing that, let me know!
I didn't test in FireFox, but I will now and let you know what happens with mine.
I have to rewrite the complete handling of modals to ensure that with every action inside the modal the backdrop is updated
I've just seen google using growl notifications...and facebook does it as well...
Notifications are not just that, you have to take into account a situation with several notifications.
Yes, i was think about a div with a fixed position and insert alerts inside it, so when an alert fade out others it should get adjusted automatically
Some of the growl plugins out there just take up to much screen space for my liking.
because a lot of the growl notifications you see these days are dark and semi transparent.
I know this has been brought up many times but Bootstrap can currently be installed via a GitHub download/clone, CDN, Bower, npm, Composer and Meteor.
None of us on the core team are really on Windows machines, so it hasn't come up for us.
VS 2015 is using bower, so it should be already ready for that.
the VS 2015 vnext web application project will be using bower, but every other web application project will still use nuget in VS 2015.
for a preview and technical details see the article "The media object saves hundreds of lines of code"
The media object was originally conceived for the Facebook timeline; where you have lots of different types of content all sharing the same structure: a "media object" (image, video, flash, audio etc.) on a side and mainly textual content on the other one.
The HTML and CSS used by pea.rs is also completely different.
Bower receives 1st class support in the IDE at that point, and Microsoft's own client-side assets will be delivered from Bower.
Here's some reading related to what I've stated above:
I've sent them a message on the NuGet package site and also a quick note on Twitter.
That being said, there are lots of users of NuGet still and it's not going away.
They started open sourcing on github instead of codeplex, better support for git instead of just TFS (or VSS, yuck) and now bower support so developers can take advantage of all that is out there already.
There almost 200K downloads of the latest (out of date) version via NuGet.
NuGet is for compiled .NET binaries.
Nuget is going to stop delivering front end packages like this to all new .Net 5+ projects (MVC 6, Webforms, etc).
All .Net developers are going to have to use bower to add front-end packages in the future.
Outdated bootstrap packages was one of the reasons I switched to bower from NuGet.
Our subnav in the docs is a bit of a hack right now and for us to add to the repo would require a bit of reworking to make it the best it can be.
We'll revisit after we push out 2.0 for a 2.x release.
I just spent an hour figuring this out so here's how I did it.
The file that I'm using the subnav in is in the root of my site hence the path.
Make sure that the link to the docs.css file is in the <head> of your document like this.
The element itself has been added in 2.1.0-wip, but the javascript is not yet there.
the hover color for buttons is a bit different from the original theme.
Hi folks, check out Bootstrap 3.0. latest stable version custom themes(skins) here
I'm trying to make a rather large modal in terms of width, like around 950px.
Left value must be calculated dynamically during opening of modal window, depending on the width.
we're trying to not set any styles in css unless absolutely necessary.
Here is the example I am working on:
this is now supported in the dev branch and will be released with v1.4.0
The reason is that some content on the website I am building needs different column settings for medium and large devices.
We won't be adding a mobile grid system at this time.
I've subverted a 'pager' for this purpose with some custom styles.
You can find it over here : http://socialpublish.io/
I have written my own bootstrap design compatible wizard / progress tracker with css only (no images needed):
I am just starting out on the client but will def contribute more as time goes on.
I've forked the JSFiddle provided above and cleared out the badges and replaced them with icons (empty stars for incomplete steps, stars for completed steps).
I just looked more closely at your plugin and kudos for making the markup an ordered list.
In my fork I've implemented different color and pointer for disabled state (as all steps after current are usually disabled by design).
Notice that the event does not return false.
By The Way, @xopher, if you use an un-ordered list, it will simply leave the numbering off until the responsive kicks in.
I created a simple wizard with Twitter Bootstrap.
I used LESS to re-create what we have above in this thread originally by wotaewer and made it compatible with the .nav-justified class.
Here is the code for anyone interested:
I created a github repository with a bower component (for easy installation).
I am using Safari Version 7.0.5 (9537.77.4) on OSX Version 10.9.4 build 13E28.
Here is a link to a JS Bin with the appropriate code in it.
Here is the log of the last shown object that did not appear.
I haven't seen someone pointed out that you can't scroll pass the modal footer buttons, it's impossible to click it because bounces back when you scroll.
I saw it on the Docs live demo.
Every ipad has the same device width of 768px and it stays 768px even if you are landscape.
There's two other attributes called availWidth and availHeight that change when rotating, but the device-width stays constant.
After much simplification of the testcase, I've been able to repro this in Chrome and Safari 9.0.
Our support policy for Firefox is that we only support the latest Extended Support Release (ESR) version and the latest stable version, since Firefox is a modern evergreen self-updating browser.
Mozilla themselves no longer support Firefox 28; it doesn't get security patches or bug fixes.
To clarify, there's no immediate need to update to v4, for yourself or your users.
v3 will be maintained moving forward so if you need those specific browsers supported, we've got you covered there.
EDIT: Just want to clarify also, that it is the ZIP archive file I am not receiving; the custom URLs I'm getting.
I have seen that a gist URL is generated; that means createGist working correctly.
Yeah, I can't reproduce this anymore on Ubuntu, whereas I could consistently before.
This started happening recently when I updated Chrome for Mac to v50.
I've been able to replicate this bug on two more machines.
Your video is private so I can't see it.
Since the plugin does a lot of looking at the $.fn.tooltip, I had to change the noConflict method to specify the new name so the plugin code would know where to look and what to load.
I confirm this was fixed in 3.2.0 after updating from 3.1.1.
I did not see any side effects with that code.
I'm running Mountain Lion, Bootstrap 2.3, JQuery 1.10.1 on Chrome 27.0 and somehow I don't need this fix anymore.
Chrome only does a garbage collection in certain circumstances, and until then it will appear that memory usage is ever increasing.
If I use it in the most basic example and just a small piece of the code in a fiddle it does not happen but unfortunately in more complex scenarios it does seem to happen (more libraries, more controls, more 'things' happening).
I'm working to isolate it but I am at a conference which is why I could only supply a quick screen capture to illustrate what I and other users are observing.
We cannot assist you unless you post a live example of the problem, as previously requested.
The "/components" page is constantly re-compositing layers because of the animated progress bar, and that takes some memory and CPU.
If the window and the tab are in the foreground, your OS is going to give it the memory it wants and won't reclaim it until another process needs it.
In my 3 Gb example, closing the tab release 3 Gb and I saw in Windows' task manager that RAM went from 6 Gb down to 3 Gb.
Note that the libs css file has font-awesome stuff as well, but I've tested it by removing font-awesome and it makes no difference.
I'm going to try to include parts of the bootstrap less build and see it I can find the perpetrator.
I see the same behaviour on drivetexas.org with Chrome 35.0.1916.114 on Windows, but I don't see it on getbootstrap.com.
In the case above, the width of the button is a decimal value (IE: 102.4343px) because it is an inline-block element and the width is calculated based on the width of the text and the cell width is a whole pixel size (IE: 103px;).
On vanilla Windows 10, IE11 has auto-hiding scrollbars, so this isn't really an issue there.
I've added the comments regarding this discussion though for the team to take into consideration when triaging.
The screenshot attached is what happens to the menu when you tap it.
I tested this in Chrome 23 beta and it is fixed.
Only a little while to wait until Google rolls that out to all the Chrome users.
I provided a watered down page without much of anything other than the top menu and a footer.
Actually, the docs also cover the need to set an explicit width, so then this is just a matter of needing to use the correct markup; see jsFiddle for working example.
The gist is that an element with display: table; that's placed within a parent that has display: inline-block; occupies 100% of the available space when no pixel-width is set.
This use-case comes up a lot in my projects.
I needed something like this for a project I was working on and modified the existing offset mixin to create an inset mixin.
I checked this by the 'Inspect element' option in Chrome and looked at the color markings.
Here's a PDF printout (US Letter page size) of the Bootstrap docs in Chrome 31 (latest stable) on OS X, with some specifically-sized divs added:
Notice how the right edge of the 768px-wide box goes beyond the page margin implied by the <table> and <pre> borders (also roughly indicated by the red box I added in Preview.app to aid comparison).
A printed page is an inherently different size and format than a small viewport.
I'll try to explore it myself as well, but the Bootstrap Customizer wasn't working for me this morning.
I have written this little plugin for the same.
While no one really know what voodoo Google uses to weight keywords on a page, I'm fairly certain that those words that appear near the top of the source gets higher weight than those at the bottom.
one of the main ideas of Bootstrap is that you create basic pages...
but actually, I haven't found an easy way to do this.
Making a column not be collapsed is just one of the possible uses.
I achieved this recently by putting my modal mark-up in my HTML:
Note: Only "modal-body" is replaced by another page content.
Now imagine that effecting many places all throughout a large volume of code and spanning across multiple files.
The docs explicitly mention that those classes use display: block.
Such a wide variety of autocomplete scripts are already available[1].
I'm not talking about javascript part, just about styling/positionning the elements in the right place.
Yeah, mark and i have talked about this a few times.
this is what we have planned for 2.0:
Zurb Foundation is a good example of another framework that has this option for layouts -
Consider the following images (taken from an iPhone emulator), the form has class="form-inline" so that form elements are "all-in-a-row" in a desktop environment: in the first, elements are collapsed; in the second spaced elements seem more elegant to me
We found we only need to adjust our grid gutters on mobile (desktop and tabletish viewports share the same gutters) so we only needed two sets of prefixed surgical classes. .m-spacer and .spacer.
This isn't just about backwards compatibility, it's about bad design choices and essentially breaking some very simple and essential functionality in JavaScript.
We'll leave the !important in for now.
The h5bp folks seem to recommend not mixing jQuery-based and CSS-class-based showing/hiding in the first place:
It is interesting to note that html5-boilerplate's .hidden also uses !important.
My approach has been minimal options, offload as much to css as possible (don't set styles in js), keep it lightweight, less is more.
FYI, http://harvesthq.github.com/chosen/ integrates well with bootstrap styles, and match
Chosen's default style differs from Bootstrap's just a little bit.
We have a an element that is displayed as a right sidebar on large screens, but which should appear on top of our main content area for smaller screens (i.e. mobile).
I'm going to open up new tickets for each interactive js component.
We already have MooTools and there's been a lot of demand for us to ship with jQuery since most of the extension developers and site builders use that.
This many modifiers for grid layouts is kind of ridiculous and unless someone can come up with a solid case for supporting them, we have no intention of doing that right now.
We've accomplished this by copying the initialization from the bootstrap core, this also goes inside $(document).ready():
here's a recently released FULL RTL copy of bootstrap including JS/glyphicons
Lot of things was improved in 3.0 take a look at this merged pull request #9137
However if we are going to do that it will need to be accessible since we have no intention of taking a step backwards in accessibility.
And several components should be reviewed.
Since modals are initialized by default, but won't match the default selector anymore, we need to initialize them ourselves.
For example, a button group with data-toggle is 'button-radios', if user accesses with text browser (lynx for example), it should display a list of radio box rather than buttons.
The example pages are now in Arabic too so you can test them out.
I will redo the test again after updating the files.
padding: 0 3px 2px; is technically padding: 0 3px 2px 3px -- which when reversed is the same thing
I would be happy to test (and educate about specific accessibility issues, if you want), and as I get more comfortable with bootstrap I'd also be happy to help with the limitation.
We're using the great MooTools, but also on our way to replace it with the more popular jQuery, and just starting to mess around with Bootstrap for one of the future releases of Entando.
It is certain that "bootstrap" has some lacks for accessibility.
i just confirmed this and there's no bug in R2 with this.
See comment below for an explanation on why the selector is [data-toggle!="modal"][data-toggle~="modal"]
We are looking at using bootstrap in Joomla for the new release.
I noticed that some of the JS doesn't have a good fallback for when JS is disabled.
Also, it wasn't a real-time always-on service, so there was the inconvenience of having to run it manually on a periodic basis.
The current classes don't have much value since their effect pretty much the same as reordering the content itself.
When using the grid 960 system, and then moving to bootstrap's system, I've found it very handy to have a set of .css classes to draw from for adjusting the vertical spacing between elements and/or filling empty grid elements.
I have combined Bootstrap and Chosen on this page http://driversworld.us/app/adddrivers/ , and as you can see, it looks OK.
All jquery css element classes start with prefix 'ui-', so there are no conflicts.
Very happy to say work has started on this for Bootstrap 2.0 and the early version is now in 2.0-wip.
I've made some modifications to the html generated by marcopolo to add boostrap styles.
This is overwriting any customization of table row color.
That's why I'm currently staying with the Zurb Foundation framework instead of switching to Bootstrap.
I copied the table definitions from .table to .table-no-hover and I use that for now.
That doesn't remove the effect, only makes it behave as if it wasn't there (i.e. transparent).
It uses table-nohover in the class, and it turns the hover off for that table.
As far as I can tell, there's no pure CSS way to do this with bootstrap.
But let's see if the structure mentioned in the comments here suffice for all day needs since they at least allow for different orderings on phones and larger screens.
Rather than adding a bunch of new classes (col-push-lg-, col-push-sm-...) I've submitted a pull request which simple will only apply the pull/push at the proper size.
E.g. here are accessible implementations by Hans Hillen of most of the principal widgets: http://hanshillen.github.com/jqtest/ with details of what changes were made to the original widgets.
I'm willing to try.
I just opened a pull request on your bootstrapr project allowing building a package pulling the latest plugins right from GitHub instead of just using the static files included.
P.S. Please note that I run a heavily modified fork of Bootstrap 2.0.
I was looking for a silimar option only I was trying do the following.
And now for the live demo to ensure that the production deploy was successful...
One of the things being discussed here is that offset and push do the same thing (in a different ways, but it's the same result), it's just duplication.
The other thing is that you have control over the grid in different viewports but not over the offset/push.
I wrote some responsive insets for a site I'm working on, just incase anyone needs the same:
So in my HTML I have something like this (simplified for the example) where my right-hand sidebar is source-ordered at the top but shows up on the right:
And as a side note, I was stunned by the appearant disregard of continuing Bootstrap's (re)usability, not the fact that they do something for only one person.
Well the effect added here changes the interaction with the user, specifically when hovering over a table row.
feel free to try to get a pull request in shape because I dont have a lot of time at the moment :/
I see that nav-tabs and nav-pills both can have a "second level" nested list (the dropdown), but there's no such similar thing in nav-list; here's my very little contribute for such second level (put "nav nav-list" on the nested UL, too), but it surely can be improved: any contribute will be appreciated
The lack of support for nested and subnav is the only thing that keeps me away from using Bootstrap at the moment.
You surely can nest the .nav.navlist, but the rendering doesn't meet most of the users' expectations.
They don't want only the whole ul to be indented by 15px from the left and right, but they want the links to have a left- and right-margin of -30px and a padding of 30px on the left side (on the 2nd level), etc.
The transition holds some internal state about the HTML node, and seems to have no semantics to "execute without animating", or for clearing it's internal state so that one can show/hide the thing and re-apply the transition to the node afterwards.
To be extra clear, let me explain the use case which led me to filing this.
Right now, translations are hidden way down on the Getting started page.
It's on my list to build a service which builds the files together (this is pretty necessary for the 2.0 plugins).
Many other carousel widgets use pills to display this information.
As for the time being, this has to be hardcoded for every level (as far as I can see):
As I see it, there are four options on the table:
The typeahead from Bootstrap v2 was removed.
In that case you are correct but the underlying idea is the same.
But this double animation is clunky, also note that it is impossible to trigger both animations at once, because one needs to know the $(element).offset() of the already visible element inside the list in order to properly animate scrollTop to the correct position.
The idea is to detect a visitor's preferred language, check if we have a suiting unofficial translation available and display a short message and link somewhere on the page.
I did use a different structure though, something like the following so it allows for iteration with Object.keys.
Most recently, I remember www.teslamotors.com having such functionality.
A quick Google search shows that this has already been done for jQuery.
I didn't find how to update data-source with typeahead.
But I note that the only uses of uppercase and lowercase in Bootstrap itself are in .initialism and the casing utility classes .text-lowercase & .text-uppercase.
For help using the suggested replacement, Twitter's Typeahead, ask on that project's GitHub.
For v3, we won't be adding anything to address this.
Let me know if you'd like me to do a pull-request.
In my experience, the values of .spanN, .offsetN etc. get updated when you set custom values.
I have a working CSS-only implementation of a class table-fixedheader that can be applied to a Bootstrap 3 table.
I realized that and deleted my comment after I read through everything again my bad
Hmm I can update this gist for 3.1 if its needed.
I'm working on a project where we're using Typeahead as auto-suggest, not the only options.
I just finished writing some code that will let me use remote data querying on the Typeahead module.
I am trying to use bootstrap to implement a mobile app interface using HTML5/CSS/JavaScript and have worked through some basic tutorials and explanations of the bootstrap system and its components.
I have customized bootstrap subnav code for table to make the header static.
I downloaded the bootstrap files from the bootstrap site from the custom link:
I then created an index page with the following things:
Depends on your definition of "new"; the Galaxy S4 was released in April
I have just discovered after buying an s4 and testing my designs on it and other low pixel density phones.
I don't know about Iphones/safari for mobile as I don't know anyone with an Iphone3 or greater.
I have discovered it is very variable depending on the version of android I believe.
i customize bootstrap3 and make it's direction dynamically by adding a $dir var in variables file then on each files check if $dir == 'rtl' then float:right else float left.
we have this requirement also in the [GlobaLeaks[(https://github.com/globaleaks/GlobaLeaks) project;
In some project, I have to switch to foundation because they support RTL out of the box.
it's mine code that wrote for bootstrap 3:
by the way, the reason for two separate files is specificity hell if your using top elements styles
There are addons for handling that in v3.
This has been added to v3.
The current Bootstrap implementation requires me to subvert the grid system for a semantic three column display.
We didn't have too much time to put into it ourselves, so we never got around to making it official.
This would allow you to apply uppercase or lowercase to multiple items throughout the site and make one simple change in _variables.scss
Uppercase and lowercase are core elements in typography.
Here are a couple super quick examples;
There are some cases where I have theme modules that depend on other theme modules (trying to create an extensible structure for different themes/components)
We have a gist reproduction here and a live example of said gist in raw git.
For tooltips+popovers, the "auto" placement option is now available.
Well for our particular situation we're using uppercase in our branding for labels and buttons and we use lowercase on our headings.
I have designed a brand in the past utilizing uppercase for almost everything. and similarly done this with lowercase.
Having said all that, I will leave that final decision up to you.
This would allow to use button groups in forms.
we actually moved this code into the enforceFocus method a while ago for odd cases like this, where people need to manage their own focus state.
And no javascript would be required to get the wanted behavior, the browsers would be handling it.
I wanted to use the checkbox button groups just yesterday when I realized that indeed those are just styled buttons and that I needed a whole bit of HTML and jQuery underneath to actually make them work.
Travis CI supports parallelization across VMs.
We'll take a look at this in a future release, but not for 2.0—too crunched for time right now.
For dropdown menus, I don't know if there's an explicit justification beyond it being less critical in that case.
Just to clarify: The label is merely descriptive.
The reason for this would be if you have a dropdown toggle (like a link or button) to the right of an element that can have variable width (e.g. a search query string that was entered).
Bootstrap doesn't currently require folks to use a particular JavaScript framework, and validation gets more into the business logic side of things, away from our core competency of visual presentation.
The JS unit tests and the Saucelabs tests could be run in parallel, or as the Travis docs mention, the JS unit tests themselves could be split into directories and run in parallel.
So the toggle can sometimes be towards the rightmost or leftmost part of the screen depending on what the user entered, and therefore the dropdown menu will sometimes be offscreen.
Currently, if I want to have a progressbar, then I have to use one out of the following possibilities:
Note that this example has two buttons, one on the page, and one in the drawer (for closing).
It's not currently on the roadmap at all.
From a quick Google search I found http://www.monolinea.com/labs/bootstrap-style-guide-boilerplate/ but its not running the latest version of Bootstrap and no code examples.
New features are no longer being allowed into v3.
Please take a look at this dribble shot: https://dribbble.com/shots/1254439--GIF-Float-Label-Form-Interaction which shows this in action as well as some pros for it:
All tables with a class of table automatically receive a row hover effect.
To see a sample, go the following link and go to the bottom.
Attached is a stripped down file of what I work with.
I did switch with v3.0 on some web site and I didn't have compatibility problem!
There is a variable $custom-control-spacer-y in the _variables.scss but it isn't used anywhere.
Bootstrap 3 is no longer being officially developed or supported.
We're talking to the current owner of bootstrap—will update when we hear more.
I am currently managing all of my deps using npm and bootstrap is one of the few that is still not there yet.
We've just published v3.1.1 as our first release in the NPM registry.
jQuery 3.0 is only alpha still and is not a stable release.
jQuery dropped the new .show() and .hide() methods in the latest beta (3.0.0-beta1).
It seems like yamm (Yet another megamenu) has bootstrap 3 supported version here:
Bootstrap 3.3.7 now supports jQuery 3+.
jQuery 3.0 final has been released.
Parallelization is free on Travis and would require only a few changes to the Gruntfile to split the tests into subtasks that can be handled by separate build commands.
I use Windows Vista (I know..) and tested in IE 9 and Firefox 22
I see what you're suggesting, but that doesn't actually do what the above code does.
Yes, though we probably won't start work on it until jQuery 3 ships a stable release; jQuery 3 is currently still in beta.
Bootstrap has container and container-fluid classes for content.
Here is a live example http://mrlopez.me/bootstrap-floating-labels/ someone else did with bootstrap.
Turns out it's not possible to make the <body> clickable in iOS Safari using either cursor:pointer or onclick="void(0)".
We're basically EOL-ing v3 anyway, so we likely won't try testing it out until after we ship our first alphas with v4.
We have some unit test problems to fix before we can comfortably claim jQuery 3 compatibility: #20182
We won't be moving anything and we won't be adding any new classes to v3 for this.
The package contents from the dist folder and twbs:bootstrap.js in the packages folder are the local files.
Has anyone stuffed the data source with values retrieved from MySQL?
I've looked and don't see it, but I'm wondering if anyone knows of link to make feature suggestions to GitHub?
Could you please share what stuff is planned for the 3.1 ?
Was it left in there on accident?
How can I get the file bootstrap.css directly (without having to download the whole .zip file)?
Is there a CDN of some sort?
What are the thoughts of just rolling a Bootstrap jQuery UI theme?
Do you see this being extensible to include two months at the same time, side-by-side?
Why are you using divs instead of a table?
Any progress on that?
So is anyone working on it?
Is someone interested on define the data range markup?
Why implement these when there are already 2 different types of notifications?
Why not use HTML5 Notifications?
How would you set up the folder structure for the package?
I wonder what would be the percentage of developers using vNext projects in next 6 months, more than 20% ?
What would this actually end up looking like?
Does anyone have a working example that includes the markup and css?
Is there something you would change?
What's the trick to get the javascript to work?
How exactly does it need to get inserted to make the scroll-wonder happen?
What about button elements that look exactly like label elements?
What if all elements looked the same?
Could you make hovering more color intense?
Is there a way to set the modals width and have it center properly?
How do you set an iframe width within the modal to be the same width as the new bigger width of the bigModal?
is it possible to have a layout inside the modal header ?
and is it possible to have the width / height and position aligned automatically ?
Is there a particular style you think would be useful?
Can you confirm that you're using Safari v7.0.5?
What is the best way to make a screencast?
Do you have any Safari extensions installed, by chance?
Could you please reduce that to a minimal JS Bin?
Also, do you remember which browsers sometimes hide the scrollbar and when they do it?
Why you overwrite margin-right on .dropdown?
What viewport width was this at?
How do I use those with a customized bootstrap?
Is there a particular reason for doing this?
May I ask why is it considered closed?
Could you please point to which example the problem is most frequently reproducible with?
Could you give me some details or even better links why you not update?
is there a timeframe for how long support for V3 will last?
Are you using Bootstrap v3 or v4?
Has anyone observed this problem on Windows or Linux?
Could you please make a JS Bin, jsFiddle, or similar that demonstrates the problem?
Has anyone been able to reproduce this?
What OS(es) have you observed the problem on?
Any update on this?
Could you please post your about:gpu and which distro you're running?
Is your collapse animation broken on the docs example?
Just to verify I wonder if this would affect any other functionality with the collapse feature, such as this example on bootstrap's docs:
why do you think MutationOberserver is the wrong choice for this issue?
Is there a way to achieve the functionality without changing the bootstrap file?
How are you judging that the page is using a lot of memory, and which operating system are you using?
Have you tested with Windows Chrome or Linux Chrome?
Could you re-test using the latest Bootstrap code in the master branch?
What OS and browser are you using?
Can you test this and see if it works for you?
Are there any updates on this?
Can you post a screenshot?
Is there any solution to attach a "size changes" handler to the modal that updates the modal without having to manually call the the update handler?
When are you thinking of having the challenge?
do you have a reduced test case (in jsfiddle or similar)?
What version of Windows are you using?
I wonder if there is any possibility that this line would be somehow injected with a future Bootstrap.
Are you able to reproduce this in the iPad Pro Simulator in Xcode?
Does converting to dojo first make the most sense?
Is there a part time solution to this issue yet?
What do you think?
Could you give step-by-step instructions to reproduce the problem?
Is there a way to achieve this type of layout with the current Bootstrap classes??
did you try landscape mode?
How does one correctly combine media queries?
what are you doing for the options?
are you able to see what it output?
Why is the issue closed actually?
Is there a final solution/decision?
Hey, is there a quick hack so links inside the modal window open in the modal too ?
Can someone please post an example of loading content into the modal body, using the fix from @fat ?
Is there a way to trigger that functionality with the pure JS with unadorned DOM (no data attributes)?
Has someone already started on this?
Why not use fractions instead?
Is there a good work around?
Does the new typeahead code support remote data sources?
Is there a point in reimplementing his?
Could you please create a solution for fluid rows as well?
What did they suggest to include?
Is there a specific reason that this doesn't support remote data?
Does anybody know of a workaround?
Sorry if I am wrong, I'm new to Bootstrap community :(
Why are any of these !important ?
Is there any progress on this one?
I was just curious to know whether this "spacer" solution has been added in core of Bootstrap or not?
Wondering if there's a better solution?
Can you describe idea a bit more?
Did you read his proposal?
could you plz schedule this for v2.1?
Is this coming to v4?
Is this finally supported in newest release (v4.0.0-alpha.2)?
any idea what release this will be included in, and when it will be live?
I was wondering why all of a sudden so many very simple show/hide calls weren't working in JavaScript.
What should that involve except for aria and keyboard navigation?
Hi I was just wondering if any progress is being made towards this.
Has anyone done an audit of Bootstrap to identify all of the accessibility issues, or at least the most pressing ones?
Or am I missing something?
Are there any developers working on it?
Are you using multiple monitors?
If so do they want help?
What do you have in mind to alert to visitor with?
So the question I'd ask is do you feel strong enough about a feature like this to open a new issue and reference this thread to provide detail or do you feel you've done what you needed to and can move on comfortably?
How does this cut down on time?
Does anyone have the same problem or a solution?
Is there a way I can take it a step further and simulate clicking the "Compile and Download" button in a script to download the generated zip?
have you taken a look at how the customizations are currently being passed to the herokuapp for building?
Is it possible to hack somehow our html to get this effect?
Could you post your about:gpu with hardware acceleration re-enabled?
Is this assigned to somebody and will we see a fix in 2.2?
Is there an alternative place to get a custom build?
Can anyone else prove that master branch (last commit) still has this issue ?
Just wondering, why would anybody want to first clear the menu if the page will reload anyway?
Can you be more specific?
What's the bug?
Can someone summarize the problems you've encountered with jQuery 3.0 alpha and Bootstrap 3, in the form of a few simple jsbin examples?
Is there a remote cache somewhere that could be causing this?
Can you provide screenshots of what you're seeing vs what you're expecting?
Have you tried with other browsers/systems?
Any news on this?
What would I need to run the script myself ?
Is this ever gonna be fixed?
What's the status of this issue?
I wonder if it could be linked to Chrome 19 specifically.
Is anyone else getting the same behavior?
Anyone figure this out yet?
Anyone else experienced this?
Can you provide more details about what the conflict is?
Can you explain me how to use noConflict?
What did I do wrong?
Any news about that?
Is it the right way?
Was it ever tested?
Is it going to be fixed in any of the nearest releases?
Does anybody know a good solution until the library is updated ?
What browser was used for those tests?
What if someone has success as a post tag?
Could you also please include the unminified JavaScript version of bootstrap.js?
Can anyone offer any insight into why this style might have affected my modal layout without them containing any images that match that style declaration?
Are there any other popover libraries that people know of?
I'm just curious as to why v4 is using 1rem as the html font-size?
Is there a planning for exit?
Want to know when alpha.3 version will be available on the web site?
Do you have a concrete example of a problem caused by this?
What version of iOS are you running?
What iPad model are you using?
any update with this?
Also, are you using Bootstrap v3 or Bootstrap v4?
Is there a better way to handle?
How will this be handled in future versions of bootstrap?
Why don't you open a new ticket?
What if the proposed $.fn.bootstrap version number is appended only to the fully built bootstrap[.min].js file?
Is there a way to do this currently with Twitter Bootstrap?
Will the input-group-wrapper class be added?
Can we now consider this sufficiently addressed?
Would you be able to share what your specific, real-world form was that required such a layout?
is there a place one could submit bugs and suggestions about your tool?
Can bootstrap do this now?
Any updates in last 9 months?
Can you @Yohn elaborate?
Or is there a better way to handle this?
Does anyone have a fiddle example of successfully using the "container" option?
But is this anything guys want to do?
Is this not essentially what a "well" is?
What do you think?
Could you link us to the dupe?
How about we just use 1%?
Is this what you mean?
Do you experience this problem in the docs too, or just on your own page?
Could you give your reasoning for not including the Firefox fix in the code itself?
Can you post the solution into any other code tool?
Is there anything we can do here to integrate with existing plugins?
how are you currently implementing it?
Is there a need for that from "upper management"?
Are you targeting 2.0-wip or master?
What browser and OS are you using?
How do arrive at that conclusion?
What do you think about introducing jquery.transit to handle the collapse functionality?
Which local files are you referring to?
Can you confirm that the problem is resolved using this Bin?
Would you mind making your example into a JS Fiddle or JS Bin?
When will this be published or is there any Internet accessible site with this new feature ?
What are your reasons that the border-width "generally" shouldn't be defined by a variable, or customised?
In case it's relevant, what version of Firefox and what OS are you using?
Did you check it with 28.0?
Seems pretty good to me.
Great work!
I hope I wasn't rude.
No doubt :)
No problem! :D
Great job
Thanks a lot guys, saved me a lot of work!
APPRECIATE ALL YOUR HARD WORK in making us catch up to speed.
Thanks for your fiddle!
nice job!
Thanks again.
Thanks!
This is great, thanks for taking the time to build this!!
Just what I was looking for.
You saved my day!
Wish I could be of more help!
Thanks for trying.
Thank you for your answer.
Thanks for helpful hints, everybody!
Thanks for quick response,
That would be logical.
And hey, before I forget, I really appreciate your commitment everyone and proud of your professionalism!
Thanks again for reaching out regarding it.
Thanks for the follow-up.
I appreciate your attention to this.
that sounds good.
This would be awesome.
thanks a lot, that is precisely what I was looking for.
it does look good.
thanks guys for outstanding comments...!!!
helped me out to understand the topic
great suggestions on this thread, agree with comment above mine, tnhx !
Thanks for considering!
Sorry, I only read your comment.
I hope it'll be ready soon.
Nice.
Thanks folks!
Fantastic work as always.
So badass
Thanks for all your amazing work thus far!
Makes sense.
Good luck.
Yeah, that makes sense.
Oh, that's a great notice
Sorry about the delay.
I can definitely put in a vote for this.
Thank u man!
Hope this issue would have been solved.
Thanks for the feedback!
Glad you found it useful.
You're the man!
Any help would be great.
Thanks for making Bootstrap even greater than before.
Also, sorry I didn't reply earlier.
Thanks for opening this issue!
Thanks everyone!
It is out of Topic, sorry.
Sorry dudes.
Many thanks for getting this in - great stuff!
I am sorry it took me so long.
Feel free to remove me.
Hi everyone!
Looking forward to the publish.
Thanks guys.
Thanks for your patience.
Looking forward to the fix in 2.1.1
Oh well, thanks for your help.
Looking forward to the fix.
Glad to help.
Sorry for the delay!
Want to say thanks to @ehoch as well - Thanks man!
Thank you for this hack @ehoch.
Very helpful !
Yeah, didn't notice it!
Let's tackle it with a follow-up release.
Thanks so much.
Thanks for the correction.
Hope this help someone
Thanks for your solution!
Im glad it was useful for you.
Hope my thoughts were helpful.
Very cool!
Thank you for the information.
I wasn't aware of that
Exactly what I needed!
This is great.
Thank you for this.
Done and done.
Oh, of course, how could I be this blind
Thank you for your help and hope to see this resolved!
That's interesting.
My apologies then.
Thanks for your replies (and sorry for the long time).
Sounds good.
Good job
I respect your opinion.
Thanks for all your effort so far.
Keep up the great work
Thanks for sharing those details.
But thanks for considering it.
We definitely appreciate all the work you and Jacob put into Bootstrap.
That's exactly what I was looking for.
Thanks for using my tool.
Hope it saved your time and effort :)
I hope this makes sense!
Looking forward for the 2.0 release.
You're welcome
This helps.
Thanks.
Thanks for pointing me in the right direction!
Thanks for the suggestion.
Any help is greatly appreciated.
This is great!
Thank you for continuing this and not leaving it closed.
I really appreciate it.
Looks impressive!
Good idea!
Thanks for all your work - its appreciated.
I appreciate the quick responses.
Well i tried to add less but somehow it breaks the grid system..
The other problem is the IE7 doesn't support :before and :after.
There's an error in the minified JS link above.
However, there are some problems in Opera/Linux:
I have a very strange issue with your datepicker using Chrome if there's only one field on the page: when using the keyboard it moves 2 days forwards or backwards instead of just one.
The problem with using a select to choose the year is that the choices are limited.
When I click on the year and enter 20 for the year, the week numbers doesn't show correctly:
I noticed that too, but that's a JavaScript error.
That won't work on IE 7 and 8 for the same reasons my earlier attempts didn't work.
I could replicate the subnav but dropdown is not working on it :(
Displaying, hiding, and displaying the same modal multiple times will sometimes fail, leaving the modal backdrop fade in place and no modal displayed.
Modal scrolling appears to be broken in iOS 8, but only in some cases.
However, according to the HTML5 validator, your example has some validation errors, which might potentially be causing your issue:
i had the same issue after focusing on any input/textarea element in modal.
The use of -webkit-overflow-scroll: touch; apparently doesn't have anything to do with this—I still have the same problem without that property.
I’ve had a similar problem where a modal will not scroll on iOS.
I still have this issue after using an input field in the modal..
A similar issue happens in IE11 on Windows Phone.
I'm still having the issue as well even with 2.2.2(.0).
However the issue per se is a bug in bs3 for me because the behavior isn't consistent.
Edit: that might just be the placebo effect, still having issues scrolling when in landscape mode :(
I'm having same issue in my app.
Also have this problem on IOS 6.
Love that you are working on fluid thumbnails, but they're still broken for me after the first row.
I get the same results that you do, animations for .in in FireFox does not work.
The problem is that the transition adds the class collapse back to the element, transition is called when you uncollapse an element.
So with every collapsable panel inside a modal I will have problems with the backdrop.
It's a major break in backward compatibility.
Because of the change with modal backdrop and the new function from #15106 there are a lot of problems with the modal backdrop now.
Was having this problem too with bootstrap v.2.3.2
I get the same error if i add the icon-component only to the bundle.
bootstrap-dropdown.js when minified with JSMin::minify produces error in Firefox error console saying clearMenus()needs ;
This doesn't actually work for me – I get TypeError: Cannot read property 'name' of undefined every time I try var autocomplete = $('input').typeahead();. $('input') itself is as expected, but and has a working typeahead in the UI, but .typeahead() still returns an error.
Sometimes it's the opposite, the button is on the first row and refreshing the page will break it.
I tried removing the margin-right on .collapseMenu and still have the issue.
Also, the weird thing is that sometimes it renders properly but once I refresh the page a couple of times it breaks.
If I keep hitting F5 after that the button breaks again
I am still seeing this problem on Firefox 33.1 and also after an upgrade to Firefox 33.1.1.
Therefore the problem has to be somewhere in lines 455—472 of the current customizer.js.
And, unfortunately, the latest FF 34.0.5 is still not triggering the download for me...
I also have a vague memory of the same issue on Windows 7 64-bit, but that may be a false memory.
Just ran into this issue after updating to latest version of Chrome.
I'm still seeing the issue in ipad for 2.3.0
I just downloaded custom version without icons and it has the same problem.
The problem was we were concatenating CSS files with spaces instead of just straight up joining them like we do with the JS.
I've seen this bug outside of Bootstrap and was also able to prevent the flashing by killing the transition.
You seem to have found a different bug (related to DOM attribute mutations) which also causes the same type of flickering.
Basically when bootstrap styles are included on the page (compiled from less or directly from dist/css)
chrome fails to print/preview the page.
Same problem here, I get this error even with everything checked :
Still getting this error, as well with a custom build.
The bug cropped up when the outermodal (with overflow hidden) scrolls valuable content out of view when a modal opens in our iframe.
Biggest problem with floating thead is such a function is intense for such a small feature.
This is still an issue with Chrome 48.0.2564.109 m (Windows 7).
I'm experiencing this issue as well :(
This issue is still going on even in IE 11.
I tried to make it work simply with a new typehead() call and new values, but it does not update at all.
I experienced the issue on IE11 desktop/laptop.
I can confirm its still broken...even using defaults.
The problem is still there.
This bug is preventing us from moving up from Bootstrap 2.3.2 on our project.
I believe I am also seeing the same bug in Safari 7.0 on OS X Mavericks.
I have just encountered a small related issue with .hidden-* and .visible-* classes - they define display rule for block and table elements, however, I needed to show/hide inline elements.
There is a problem in IE, caused by this line:
I'm having this issue too.
The *::first-letter selector in _print.scss is causing the problem in IE11:
One issue I found is that due to how Typeahead is written, after you modify the source array the results don't get picked up till the next keystroke.
The problem with this particular effect is that it's very difficult to override without replacing the whole bootstrap/tables.less with your own file.
Still getting error
When printing in Safari 7 and Firefox 25 the grid carries over to the print style, but in Chrome 34 and IE 11 everything stacks when printed.
Unfotunately, it looks like it fails to pass the tests neccessary for submitting to bootstrap.
Having the issue in Chrome Desktop with v.2.1.1
the first-letter issue was causing a crash.
Same problem for me with Bootstrap 2.1.1 on iOS 6 :-(
This issue can be replicated by selecting an item and holding down the mouse button without releasing.
I can confirm this issue with my 2.2.2 build as well.
unfortunately still happens. custom build, nothing default, same error message.
I am still getting errors with custom package.
Just checked in Chrome 23.0.1271.64 m (updated today) - bug continues to appear.
Since the error is located in mixins.less bootstrap fails to build the css if you have at least one css option checked.
even after fixing it in alpha 5, printing itself isn't working correctly in IE.
Addressed issue causing “Print all linked documents” to not work in Internet Explorer 11.
The issue in Firefox appears to be a bug with how floated elements are handled across different pages
I downloaded a good copy earlier (about 2 hours ago) but now get the error again.
Yes, i have the same error.
I'm facing an inconsistency issue (between Firefox and Chrome) when using floats on a multi-line "form" that contains input-groups, as demonstrated here.
One problem I'm encountering is that button panels aren't "responsive" enough.
The issue is still reproducing on iOS devices.
When enabling flex to create an auto-layout column, the colum reset with the use of .clearfix doen't work.
I ran into this problem as well using the Google Map API alongside bootstrap.
I looked around and found out it is this definition causing the issue :
We were able to reproduce them on other iOS devices and simulators with the same version of iOS.
If you reorder the thumbnails and call the JS again this won't work as expected every time.
I'm trying to get Bootsrap through Customize, but every time I get a blank boostrap.css and file error.txt with the error:
just tried still get an error:
Your workaround doesn't work for me.
Partial solution is to use display: run-in;, but it's also not working in all cases.
I see this is still a problem in v4 as well in iOS.
I'm using card-block now as a flex item but it won't work if I want to have card header or footer.
I just stumbled on that same issue myself; While the proposed solutions here works for thumbnails "alone", it still fails when using the Sortable plugin from jQueryUI
Using the noConflict method to rename the bootstrap tooltip function causes the tooltip code to throw a lot of errors.
Unfortunately this solution don't work with drag & drop.
... the fix breaks the layout on mobile devices, though.
Facing the same issue on Chrome Version 21.0.1180.79, selecting the option form keyboard keys works but using a mouse no update in the input box.
If you reorder the thumbnails and call the JS again this won't work as expected every time.
His solution was not working right for me when I had an element with a span12, and things were messy while sorting that.
I'm having the same problem on bootstrap 2.2.2.
I also trying to use bstooltip function but it doesn't work.
osx 10.8.2 , chrome 22.0.1229.94 bug continues...
My original problem is that we are using jquery tools which has its own tooltip method and the two don't play nice despite the attempt to add an ineffectual noConflict method.
I have not tested everything but Modals are broken because of this major change:
I'm coming to the conclusion that the bootstrap tooltip noConflict doesn't work :(
The proposed jquery code didn't work for me; i have span12 li's that each will be put on a new row. The second thumbnail still has the margin.
I appreciate everyone enjoying / using this hack, but realize it won't work with anything that doesn't support nth-child.
Using the nt-child() CSS3 selector would not work if IE 7 and IE 8 support is to be kept.
Unfortunately this solution don't work with drag & drop.
Problem is the lack of .fade on the div.modal.
I removed it but I was able to reproduce it with and without the collapse div
I have managed to isolate and reproduce the problem: https://jsfiddle.net/fczbkk/jhdsua5k/
I was able to reproduce in Chrome only (Version 50.0.2661.102 (64-bit)).
I'm seeing this issue with Chrome 22 on Mac OS X 10.8.2 as well.
Hovering .table-striped rows remain broken with @mchiocca's fix.
I still have this issue with netdna host CSS.
osx 10.7.5, Chrome Version 22.0.1229.94 issue still exists.
I've looked the source code and the problem is in this function
When the IE9 browser window is minimized an error occurs with responsive-table and table-hover.
Same issue, have the same problem with S7 on 6.0.1 SM-G930W8 and Chrome 51.0.2704.81 and Chrome Dev 53.0.2782.9
quasiperfect's answer doesn't work in all cases because it does not take the size of the tooltip into account.
Now I can have tooltip functions (Bootstrap and jQuery UI) but $('#example').bstooltip() doesn't work
I think the biggest problem with the table background hover is that it's a hardcoded color, meaning it will only go with the default table color.
Disabling a button group item does not seem to work anymore in 3.3.5.
The above jsfiddle example still doesn't work.
You can always add your own breakpoint by customizing grid.less.
In the meantime, the only way is roll the hotfix above on your own.
To trigger the data-api, simply add data-toggle="switch" to your switch element.
In addition, you can use the on and off options (or data-on and data-off attributes) to set the switch text.
Of course, you could change your CSS by changing the two lines to .input-switch { display: none; } and remove the :not selector.
That solution is already available in Bootstrap under Javascript Plugins > Button.
I've created a solution for this and its an actual on/off switch and visually matching of bootstrap.
This is my initial solution for an easy-to-use switch (using the @mdo 's guidelines)
A solution also is: http://bootcdn.com
I add this to my jQuery UI Datepickers and place them inside input-append divs and it looks just fine.
The shims are just an example, but ideally you could use the html5 format to create your form, and if you want extra customization (bootstrap style instead of standard browser style), load the plugin to override the behaviour, without calling some javascript functions.
This one at http://www.eyecon.ro/bootstrap-datepicker/ works just perfectly.
Besides, same way you can use the noty alerts as an external addon, you can always DO NOT download its CSS and JS using Bootstrap's Customizer.
Came up with a simple, minimalistic approach to the solution: https://github.com/olivierlesnicki/colibri.js.
Creating a new block formatting context for .tab-content will fix it though, and recycles the principle that underpins the "media object".
A best-practices solution from the massive Bootstrap community would be preferred over pointers to several separate projects headed in slightly similar directions but with potentially different technologies and not-quite the same goals.
With respect to the issue being closed, I'd just like to contribute a workaround that I've found to be nifty and reusable for shrinkwrapped modals:
You could also include max-width and min-width if you wanted even more control.
to play well with responsiveness, try the following (add modal-big class)
This plugin fix and improve modal windows: Bootstrap Modal
Putting it on the grid will solve this problem, and collaborates well with the bootstrap conventions.
You can use it by simply adding the class "nav-wizard" to your element just like you use "nav-pills" or "nav-tabs".
try to remove '-webkit-overflow-scrolling: touch' property for '.modal'. it helped me to solve the problem.
Only way to get out is to pinch to zoom out.
I've found the following to fix that within iOS 8.1, Safari 8, Chrome 40, Firefox 35 on the body class:
Not sure if this is the most elegant solution, but adding this class to the modal body does the trick.
Setting this property -webkit-overflow-scrolling: auto; fixes it.
The fix for this was to set
I finally found a solution.. removing the overflow-y: scroll on .modal and having a wrapper div inside the .modal-div with:
This helped me get to a working solution for my app.
I believe you can fix the issue if you use following code.
I fixed this for UI Kit using the following CSS.
mikebranderhorst's comment was a good temporary work around.
This fixed it for me on iPhone 4s and above
Even though it should have no impact, declaring bootstrap.css before bootstrap.js seems to fix the issue.
Try moving CSS files to the footer and see if you can reproduce.
Interestingly, Alt + left click seems to indeed fix the issue.
The only workaround I found is to disable the transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s; property of .form-control for select elements.
Added this to our .css and problem solved!
Adding the transition: none override to select tags with form-control fixed it for me.
If this is actually the problem, a solution would be to define the background gradient for each .progress-bar-striped.progress-bar-{warning,info,etc} combo with opaque background colors to forego infinite alpha compositing.
If we could put the right sidebar first in the source order but keep it displaying on the right, this would solve our problem.
I found a work around that seems to fix it in chrome and not negatively affect other browsers.
I met same problem, after googling I found here and zacechola 's answer solves my problem, thanks
The temporary solution is to override the rule in another css file:
If you leave it commented, then it works fine everywhere.
You can use the .offset* classes for pushing columns over.
Here's how I got this working.
As you can see, removing trigger('focus') fixes it.
Commenting out the .trigger('focus') at the very end solves the issue.
Here is a hack I am using to fix:
To turn off bootstrap's focusing/or to implement your own, just do this:
It might work if you switch from pixel-based media queries to centimeter- or inch- based media queries
As an alternative to .hide one can use the attribute hidden.
An simple fix for this is targeting .input-group-btn and input-group-addon within .navbar-form with a auto width.
As a temporary and not semantic solution, you can try to put your rows inside <thead> if you don't want the hover effect.
In the meantime, you can add this to your css file
If you need a column to not be collapsed, add a min-height to them.
I solved this problem on a site I was building by setting the right-hand column to float:right explicitly and then re-declaring a few of the responsive rules to remove the float when we want the columns to stack.
then below that rule, you just have to re-declare your responsive adjustments for smaller screens (or stick the float:right rule before your responsive stylesheet, whatever works for you):
In 960.gs, there are pull_X and push_X (equivalent to offsetX in Bootstrap) available, that solve this issue.
a possible workaround to avoid using loops in any way could be guarantee a column layout UP-TO 24 columns.
For checkbox you can get away using a label wrapping the desired input.
Seems like you could use documentElement.clientHeight to help calculate the scrollbar's height.
For all those who like to use this functionality immediately, here is a simple solution using jQuery plugin: PositionCalculator.
I guess you could just make a super-long URL with all the options exposed as well, so then you could manually hack the URL.
or, another solution might be, what I wrote in here:
This is what worked for me:
The easiest way to style disabled label is to wrap it in a <span> and write something like this in CSS.
Edit: For those interested, this is my little "workaround" that seems to work, add it after the "bootstrap-dropdown.js" include (I put mine in the $(function() { } section which is located at the end of the page in my case):
I seem to have a better workaround by adding this line after the line dpwolf mentioned, rather than changing the line:
well my solution was to add class dropdown to the parent tag on HTML markup.
My workaround is to divide this line in bootstrap-dropdown.js:
For 2.3.2 there is a fix, add css property
try this and let me know if it works for you
A possible solution would be to use a MutationOberserver to react to changes in the DOM so you don't have to worry about it.
I was able to apply this fix by incorporating it into my complete callback using something analogous to the below
I wrote some code to fix a very similar issue I was having with the fluid grid.
I have a working workaround based off the javascript workaround proposed by @Sanjo (thanks!)
I fix it with this css
I've found another solution, this is my example:
hey man there's actually a fix for this but might need some JS to force it on IE6-IE8.
Instead I ended writing a js script to fix it.
if you apply .hidden instead of adding styles directly to each element, you can modify the nth-child fix to be:
I just upgraded to 1.9.1 and this solution works very well:
Try this, the last log of $.fn.button should be the jquery-ui version:
As you can see above, I created a patch to get the noConflict method working.
It should be noted that jQuery UI also provides a simple workaround via $.widget.bridge():
For people looking for an alternative solution that closes on an outside click by default and doesn't require two clicks after that, this worked perfectly out of the box for me with the default options:
I fixed the problem by overriding the max-width attribute on the only page in my app where it mattered, but I would also prefer that this wasn't a global style.
in iOS when open tooltip and then close it by click somewhere outside, the only way to open closed tooltip again is to open another tooltip and then first one will be able to open
If you need to change style only for columns on one single page, you still can simply add col class and change styles for this.
there is a way to do this is the 2.1.2-wip branch see
If you need to change style for all columns, the best way to do this is changing standard bootstrap mixin for this and compile your own version (sic - just use any build system for recompile and happiness will come).
To fix this, I believe a tiny set of column classes is needed when screen size is between 480px and 768px -- "col-lg-3 col-sm-4 col-tiny-6 col-12".
Adding this css solves the problem for us:
To use this snippet, just add the .table-disable-hover class to your table.
Below is a dirty solution I just came up with which will look for a script tag that references bootstrap.js, attempts to retrieve it from the same location just to parse the comment.
Another fix is to add fade to this style in your custom.css. Line 5098 in the bootstrap.css file.
We could work around this by checking if docs/ exists and only then push the affected tasks into the dist tasks.
A possible JS solution could be to use insertAfter for the backdrop like in Issue #3217 ( look at @tompi solution )
As a workaround for now, I'd suggest wrapping all input-groups into one .input-group-wrapper and give it display: table-row-group.
You can set your package.json/bower.json file to point to the raw v4 repo or monkey patch whatever development version you are using.
You should be using .navbar-left instead of .pull-left when aligning things in the navbar.
I've just discovered this issue and after some experimentation I've found that hooking into the click event for the label and returning false if the disabled attribute exists works well for me.
The suggested fix would be:
Setting display:table-cell; width: 100% to fieldset element indeed fixes the problem.
Best solution I figured is to use jQuery migrate 1.4.1 plugin along with jQuery v3 so it restores any deprecated features of 1.9.x in v3.
If I'm not mistaken, all you need to do is replace show() and hide() functions with .css('display', '') or addClass('hidden') and fix a selector in alert.js